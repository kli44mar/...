let fs = require('fs');
let s = fs.readFileSync('war&peace.txt');
s = s.toString();
let t = 'war'; 
let T = t.split("");
let S = s.split(""); 
let n = S.length;
let m = T.length;
let hs = new Array;
bruteForce(T,S,n,m);
hash (S,T,s, t, m, n);
rabinKarp (S,T, s, t, m, n);
square (S,T,s, t, m, n)

function bruteForce (T,S,n,m) {
    for (let i=0; i<=n-m; i++){
	for (let j=0; S[i + j] == T[j];){
		j++;
		if (j == m)
			hs.push(i+1)
    }
}
    console.log(hs);
}

function hash (S,T,s,t, m, n){
let hashS=0;
let hashT=0;
let hs2 = new Array();
for (let i=0; i< m; i++){
	hashT+=t.charCodeAt(i);
	hashS+=s.charCodeAt(i);
}
for (let i=1; i<=n-m+1; i++){
    if (hashT==hashS){
        for (let k=i; k<=i+m; k+=m){
            for (let j=1;(S[k]==T[j]);j++)
                hs2.push(k);
        }
    }
    hashS+=s.charCodeAt(i+m-1) - s.charCodeAt(i-1);
}
    console.log(hs2);
}
function rabinKarp (S,T,s,t, m, n){
    let hashS=0;
    let hashT=0;
    let hs2 = new Array();
    for (let i=0; i< m; i++){
        hashT+=t.charCodeAt(i)*Math.pow(2,m-i-1);
        hashS+=s.charCodeAt(i)*Math.pow(2,m-i-1);
    }

    for (let i=1; i<=n-m+1; i++){
        if (hashT==hashS){
            for (let k=i; k<=i+m; k+=m){
                for (let j=1;(S[k]==T[j]);j++)
                    hs2.push(k);
            }
        }
        hashS = 2*(hashS - s.charCodeAt(i-1)*Math.pow(2,m-1)) + s.charCodeAt(i+m-1);
    }
        console.log(hs2);
}
function square (S,T,s,t, m, n){
    let hashS=0;
    let hashT=0;
    let hs2 = new Array();
    for (let i=0; i< m; i++){
        hashT+=Math.pow(t.charCodeAt(i),2);
        hashS+=Math.pow(s.charCodeAt(i),2);
    }

    for (let i=1; i<=n-m+1; i++){
        if (hashT==hashS){
            for (let k=i; k<=i+m+1; k+=m){
                for (let j=1;(S[k]==T[j]);j++)
                    hs2.push(k);
            }
        }
        hashS = hashS + Math.pow(s.charCodeAt(i + m - 1), 2) - Math.pow(s.charCodeAt(i - 1), 2);
    }
        console.log(hs2);
}
