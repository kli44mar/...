let fs = require('fs');
let text = fs.readFileSync('text.txt');
text = text.toString();
let textS = text.split('');
let a = "abcdefghijklmnopqrstuvwxyz";
let alph = a.split('');
let n = 3;
let textForFr = fs.readFileSync('text2.txt');
textForFr = textForFr.toString();
textForFr = textForFr.split('');
res = code(textS, alph, n);
console.log(res);
shift = decode(res, alph, textForFr);
res2 = code(res, alph, -shift);
console.log(res2);

function code(textS, alph, n) {
	var res = "";
	let hashAlph = new Array;
	for (var i = 0; i < alph.length; ++i) {
		hashAlph[alph[i]] = i;
	}
	for (var i = 0; i < textS.length; ++i) {
		var id = hashAlph[textS[i].toLowerCase()];
		if (id != undefined) {
			if (textS[i].toLowerCase() == textS[i])
				res += alph[(id + n) % alph.length];
			else
				res += (alph[(id + n) % alph.length]).toUpperCase();
		}
		else
			res += textS[i];
	}
	return res;
}

function frequencies(text) {
	let freq = new Array(alph.length);
	for (let i = 0; i < alph.length; i++)
		freq[i] = 0;
	let count = 0;
	for (let i = 0; i < text.length; i++)
		if (alph.indexOf(text[i]) > -1) {
			count++;
			freq[alph.indexOf(text[i])]++;
		}
	for (let i = 0; i < freq.length; i++)
		freq[i] = freq[i] / count;
	return freq;
}

function decode(res, alph, textForFr) {
	let freq = frequencies(res);
	let mainFreq = frequencies(textForFr);
	let min = 100;
	let resD = -1;
	for (let i = 0; i < alph.length; i++) {
		let dif = 0;
		for (let j = 0; j < alph.length; j++) {
			dif += Math.pow((mainFreq[j] - freq[(j + i) % alph.length]), 2);
		}
		if (min > dif) {
			min = dif;
			resD = i;
		}
	}
	return resD;
}
