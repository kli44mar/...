function Node(letter, freq, used, link, code) {
    this.letter = letter;
    this.freq = freq;
    this.used = used;
    this.link = link;
    this.code = code;
}
let str = 'abrakadabra';
let alph = new Array();
let tree = new Array();
for (let i = 0; i < str.length; i++) {
    alph[str.charAt(i)] = 0;
}
for (let i = 0; i < str.length; i++) {
    alph[str.charAt(i)]++;
}
console.log(alph);

for (i in alph) {
    let newNode = new Node(i, alph[i], 0, null, '');
    tree.push(newNode);
}
treeLength = tree.length;

for (let i = 0; i < treeLength - 1; i++) {
    minInd = -1;
    minInd2 = -1;
    minFreq = str.length;
    minFreq2 = str.length;
    for (let j = 0; j < tree.length; j++) {
        if ((tree[j].used == 0) && (tree[j].freq <= minFreq2)) {
            minFreq = minFreq2;
            minInd = minInd2;
            minInd2 = j;
            minFreq2 = tree[j].freq;
        } else if (tree[j].used == 0 && tree[j].freq <= minFreq) {
            minFreq = tree[j].freq;
            minInd = j;
        }
    }

    tree[minInd].used = 1;
    tree[minInd].link = tree.length;
    tree[minInd2].used = 1;
    tree[minInd2].link = tree.length;
    tree.push(new Node(tree[minInd2].letter + tree[minInd].letter, tree[minInd].freq + tree[minInd2].freq, 0, null, ''));
}

tree[tree.length - 1].used = 1;
for (let i = tree.length - 2; i >= 0; i--) {
    if (tree[tree[i].link].used) {
        tree[i].code = tree[tree[i].link].code + '1';
        tree[tree[i].link].used = 0;
    }
    else
        tree[i].code = tree[tree[i].link].code + '0';
}
let coded = '';
for (let i = 0; i < str.length; i++) {
    for (let j = tree.length - 2; j >= 0; j--) {
        if (str[i] == tree[j].letter)
            coded = coded + tree[j].code;
    }
}
console.log(tree);
console.log(coded);
decode(coded);

function decode(coded) {
    let decoded = '';
    let codeCh = '';

    for (let i = 0; i < coded.length; i++) {
        codeCh = codeCh + coded[i];
        for (let j = 0; j < treeLength; j++) {
            if (codeCh == tree[j].code) {
                decoded = decoded + tree[j].letter;
                codeCh = '';
            }
        }
    }
    console.log(decoded);
}   
