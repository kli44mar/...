function Node(letter, freq, used, link, code){
    this.letter = letter;
    this.freq = freq;
    this.used = used;
    this.link = link;
    this.code = code;
    }
    let str = 'abrakadabra';
    let alph = new Array();
    let tree = new Array();
    for(let i = 0; i< str.length; i++){
        alph[str.charAt(i)] = 0;
    }
    for(let i = 0; i< str.length; i++){
        alph[str.charAt(i)]++;
    }
    console.log(alph);
    
    for(i in alph){
        let newNode = new Node(i, alph[i], 0, null, '');
        tree.push(newNode);
    }
    treeLength = tree.length;
    for (let i = 0; i < treeLength - 1; i++) {
        minInd = -1;
        minFreq = str.length;
        
        for (let j = 0; j < tree.length; j++)
        {
        if (tree[j].freq <= minFreq && tree[j].used == 0)
        {
        minFreq = tree[j].freq;
        minInd = j;
        }
        }
        minInd2 = -1;
        minFreq2 = str.length;
 
    for (let j = 0; j < tree.length; j++)
    {
        if (tree[j].freq <= minFreq2 && j != minInd && tree[j].used==0)
        {
            minFreq2 = tree[j].freq;
            minInd2 = j;
        }
    }
        if (minInd2 == -1 || minInd == -1)
        break;

        tree[minInd].used = 1;
        tree[minInd].link = tree.length;
        tree[minInd].code = '0';
        tree[minInd2].used = 1;
        tree[minInd2].link = tree.length;
        tree[minInd2].code = '1';
        tree.push(new Node(tree[minInd2].letter + tree[minInd].letter, tree[minInd].freq + tree[minInd2].freq, 0, null, ''));
    }
    for (let i = tree.length - 2; i >= 0; i--) {
        tree[i].code = tree[tree[i].link].code + tree[i].code;
    }
    let coded = '';
    for (let i = 0; i < str.length; i++) {
        for (let j=tree.length - 2; j >= 0; j--) {
            if (str[i] == tree[j].letter)
                coded = coded + tree[j].code;
        }
    }
    console.log(tree);
    console.log(coded);
    decode(coded);

function decode(coded){
    let decoded = '';
    let codeCh = '';
    
    for (let i = 0; i < coded.length; i++) {
        codeCh = codeCh + coded[i];
        for (let j = 0; j < treeLength; j++) {
            if (codeCh == tree[j].code) {
                decoded = decoded + tree[j].letter;
                codeCh = '';
            }
        }
    }
    console.log(decoded);
}        
